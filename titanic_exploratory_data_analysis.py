# -*- coding: utf-8 -*-
"""Titanic_Exploratory_Data_Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1i2SIZFCT2SQyUjwVM2Ii5hti8t-JiiKg
"""

import pandas as pd

url = "https://raw.githubusercontent.com/datasciencedojo/datasets/master/titanic.csv"

df= pd.read_csv(url)
df.head() # TR: Veri setinin ilk 5 satırını görüntüleyelim
           # EN: Display the first 5 rows of the dataset

df.info()  # TR: Sütun tipleri, toplam veri sayısı ve eksik değerleri kontrol edelim
           # EN: Check column types, total entries, and missing values

df.describe() # TR: Sayısal sütunlar için temel istatistikleri görüntüleyelim
               # EN: Show basic statistics for numeric columns

df.isnull().sum() # TR: Hangi sütunda kaç tane eksik veri var görelim
                   # EN: Show the number of missing values per column

df["Age"]=df["Age"].fillna(df["Age"]).median() #df["Age"].fillna(df["Age"].median(), inplace=True) bunu da kullanabilirsin. inplace=yerinde değiştir

df["Age"]

df["Embarked"].mode()

df["Embarked"].mode()[0]

df["Embarked"]=df["Embarked"].fillna(df["Embarked"].mode()[0]) #embarked sütunundaki boş kısımları embarked sütunundaki en çok tekrar eden değer ile doldur

df["Embarked"] # TR: Eksik liman verilerini en sık görülen liman ile dolduruyoruz
# EN: Filling missing Embarked values with the most frequent port

df=df.drop(columns= "Cabin") # TR: Cabin sütununu çok fazla eksik veri olduğu için siliyoruz
                             # EN: Dropping Cabin column because it has too many missing values
df                           #burada colums= diye belirttik çünkü drop fonksiyonu hem satır hem sütun silebiliyor.

df["Survived"].value_counts()

df["Survived"].value_counts(normalize=True)

df["Survived"].value_counts(normalize=True) *100 # TR: Hayatta kalan ve ölenlerin yüzdesini hesaplıyoruz
                                                 # EN: Calculating the survival vs death percentages

(df["Survived"].value_counts(normalize=True) *100).round(2).astype(str) + "%"

import matplotlib.pyplot as plt

df["Survived"].value_counts().plot(
    kind="pie",
    autopct="%1.1f%%",
    labels=["Died", "Survived"],
    colors=["lightcoral", "lightgreen"]
)
plt.title("Survival Rate")  # Başlık
plt.ylabel("")              # Y eksenini kaldır
plt.xlabel("")
plt.show()                  # TR: Genel hayatta kalma oranını pasta grafikte gösteriyoruz
                            # EN: Showing overall survival rate as a pie chart

import matplotlib.pyplot as plt

df["Survived"].value_counts().plot(
    kind="pie",
    autopct="%1.2f%%",
    labels=["Died", "Survived"],
    colors=["lightcoral", "lightgreen"]
)
plt.title("Survival Rate")  # Başlık
plt.ylabel("")
plt.show()

(df.groupby("Sex")["Survived"].mean() * 100).round(2) # TR: Cinsiyete göre hayatta kalma oranını hesaplıyoruz
                                                      # EN: Calculating survival rate by gender

import matplotlib.pyplot as plt
survival_by_gender= (df.groupby("Sex")["Survived"].mean()*100).round(2)
# Çubuk grafik çiz
survival_by_gender.plot(kind="bar", color=["pink", "lightblue"])
plt.title("Survival Rate by Gender")
plt.ylabel("Survival Rate (%)")
plt.xlabel("Gender")
plt.show()                   # TR: Cinsiyete göre hayatta kalma oranını çubuk grafikte gösteriyoruz
                             # EN: Visualizing survival rate by gender as a bar chart

class_survival=df.groupby("Pclass")["Survived"].mean()*100 # TR: Sınıfa göre hayatta kalma oranını hesaplıyoruz
                                                           # EN: Calculating survival rate by passenger class
print(class_survival.round(2))

import matplotlib.pyplot as plt

class_survival.plot(kind="bar", color=["gold","silver","brown"]) # TR: Sınıfa göre hayatta kalma oranını çubuk grafikte gösteriyoruz
                                                                 # EN: Visualizing survival rate by class as a bar chart
plt.title("Survival rate by class")
plt.ylabel("Survival rate (%)")
plt.xlabel("Passenger Class")
plt.show()

